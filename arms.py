# -*- coding: utf-8 -*-
"""arms.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R36XBzE6WBr88_xBwuB_c08sN_JRGEY1
"""

import numpy as np # linear algebra
import pandas as pd

LTrain_x = pd.read_csv('LTrain_x.csv')
print(LTrain_x.shape)
LTrain_x.head()
LTrain_y=pd.read_csv('LTrain_y.csv')
LVal_x=pd.read_csv('LVal_x.csv')
LVal_y=pd.read_csv('LVal_y.csv')
LTest_x=pd.read_csv('LTest_x.csv')
LTest_y=pd.read_csv('LTest_y.csv')

from tensorflow.keras import layers
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.optimizers import Adam

from tensorflow.keras import layers, Sequential
modelo = Sequential([
    Dense(48, activation="sigmoid", input_shape=(LTrain_x.shape[1], )),

    Dense(120, activation="sigmoid"),
    Dropout(0.05),
    Dense(60, activation="sigmoid"),
    Dropout(0.05),
    Dense(5, activation="linear"),
])

modelo.summary()

modelo.compile(
   optimizer='adam',#optimizer=Adam(learning_rate=0.001),
   loss='mse',
   metrics=['MSE']
)

from tensorflow.keras.callbacks import EarlyStopping

early_stop = EarlyStopping(monitor='val_loss', patience=5)

modelo.fit(LTrain_x, LTrain_y,
          validation_data=(LVal_x, LVal_y),
          epochs=2000,
          callbacks=[early_stop])

test_loss, test_accuracy = modelo.evaluate(LTest_x, LTest_y)

